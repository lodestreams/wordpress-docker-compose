version: "3"
services:
  db:
    image: mysql:5.7
    volumes:
      - db_data:/var/lib/mysql
      - db_etc_mysql:/etc/mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=<CHANGE_ME>
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wordpress
      - MYSQL_PASSWORD=<CHANGE_ME>
    ports:
      - "3306"
  wp:
    depends_on:
      - db
    #image: wordpress:php7.0-apache
    build: ./
    #image: wordpress:php5.6-apache
    restart: always
    volumes:
      - wp_data:/var/www/html
    ports:
      - "80"
      - "443"
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=<CHANGE_ME>
      - WORDPRESS_DB_NAME=wordpress
      #- XDEBUG_CONFIG=remote_host=10.0.0.3
      - VIRTUAL_HOST=DOMAIN.tld DOMAIN2.tld
      - VIRTUAL_PROTO=https
      - VIRTUAL_PORT=443
      - LETSENCRYPT_HOST=DOMAIN.tld DOMAIN2.tld
      - LETSENCRYPT_EMAIL=ls@lodestreams.com
  nginx:
    image: nginx
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${NGINX_FILES_PATH}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH}/certs:/etc/nginx/certs:ro
  # curl https://raw.githubusercontent.com/jwilder/nginx-proxy/master/nginx.tmpl > /path/to/nginx.tmpl
  nginx-gen:
    image: jwilder/docker-gen
    command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: nginx-gen
    restart: unless-stopped
    volumes:
      - ${NGINX_FILES_PATH}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH}/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    restart: unless-stopped
    volumes:
      - ${NGINX_FILES_PATH}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH}/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_DOCKER_GEN_CONTAINER: "nginx-gen"
      NGINX_PROXY_CONTAINER: "nginx"
#  dockup:
#    image: ahfeel/dockup
#    volumes_from:
#      - db
#      - wp
#    environment:
#      - >
#        BEFORE_BACKUP_CMD=
#        echo "> apt-get update && apt-get install -y mysql-client" &&
#        apt-get update && apt-get install -y mysql-client &&
#        echo "mysqldump -uroot -h db -pwordpress --single-transaction --events --databases wordpress > /wp.sql" &&
#        mysqldump -uroot -h db -pwordpress --single-transaction --events --databases wordpress > /wp.sql &&
#        echo "echo 'localhost' > wp_host" &&
#        echo 'localhost' > wp_host
#      - AWS_ACCESS_KEY_ID=
#      - AWS_SECRET_ACCESS_KEY=
#      - AWS_DEFAULT_REGION=us-west-1
#      - BACKUP_NAME=sec
#      - PATHS_TO_BACKUP=/var/www/html/wp-content wp_host /wp.sql /etc/mysql
#      - S3_BUCKET_NAME=lodestreams-works-backups
#  dockup_restore:
#    image: ahfeel/dockup
#    volumes_from:
#      - db
#      - wp
#    environment:
#      - >
#        AFTER_RESTORE_CMD=
#        echo "> apt-get update && apt-get install -y mysql-client" &&
#        apt-get update && apt-get install -y mysql-client &&
#        echo "previous host:" &&
#        cat wp_host &&
#        echo "> mysql -uroot -h db -pwordpress < wp.sql" && 
#        mysql -uroot -h db -pwordpress < wp.sql
#      - AWS_ACCESS_KEY_ID=
#      - AWS_SECRET_ACCESS_KEY=
#      - AWS_DEFAULT_REGION=us-west-1
#      - BACKUP_NAME=sec
#      - PATHS_TO_BACKUP=/var/www/html/wp-content wp_host /wp.sql /etc/mysql
#      - S3_BUCKET_NAME=lodestreams-works-backups
#      - RESTORE=true
#  sshd:
#    image: 'krlmlr/debian-ssh'
#    ports:
#      - "8033:22"
#    environment:
#      - SSH_KEY=
#    volumes_from:
#      - wp
#    working_dir: /app
volumes:
  db_data: {}
  db_etc_mysql: {}
  wp_data: {}

